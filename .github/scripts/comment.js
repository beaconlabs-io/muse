module.exports = async ({ github, context, header, body }) => {
  const comment = [header, body].join("\n");

  const { data: comments } = await github.rest.issues.listComments({
    owner: context.repo.owner,
    repo: context.repo.repo,
    issue_number: context.payload.number,
  });

  const botComment = comments.find(
    (comment) =>
      // github-actions bot user
      comment.user.id === 41898282 && comment.body.startsWith(header)
  );

  const commentFn = botComment ? "updateComment" : "createComment";

  await github.rest.issues[commentFn]({
    owner: context.repo.owner,
    repo: context.repo.repo,
    body: comment,
    ...(botComment
      ? { comment_id: botComment.id }
      : { issue_number: context.payload.number }),
  });
};

// Evidence comment specific function
module.exports.createEvidenceComment = async ({
  github,
  context,
  evidencePaths,
  evidenceCount,
  diffContent,
}) => {
  if (!evidencePaths || evidenceCount === "0") {
    console.log("No evidence files to comment about");
    return;
  }

  const paths = evidencePaths.split(",");
  const header = "## 🔐 Evidence Bank Changes Detected";
  const body = [
    `This PR contains changes to **${evidenceCount}** evidence file(s) that will trigger blockchain attestation when merged.`,
    "",
    "### 📋 Changed Evidence Files:",
    ...paths.map((path) => `- 📄 \`${path}\``),
    "",
    "### 📝 Changes Preview:",
    diffContent || "*Diff content not available*",
    "",
    "### 🔐 Next Steps:",
    "- ✅ **Review**: Please review the evidence content changes above",
    "- 🔗 **Attestation**: Upon merge, these files will be automatically attested on Ethereum",
    "- 📊 **Verification**: Attestation UIDs will be added to the evidence metadata",
    "",
    "---",
    "*🤖 This comment was automatically generated by the Evidence Bank workflow*",
  ].join("\n");

  try {
    await module.exports({ github, context, header, body });
    console.log("Successfully created/updated evidence PR comment");
  } catch (error) {
    console.error("Failed to create/update evidence PR comment:", error);
    // Continue workflow execution even if comment fails
  }
};
